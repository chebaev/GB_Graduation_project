import time
from aiogram import Bot
from aiogram.types import Message, CallbackQuery
from core.database.common.models import Attribute

from core.database.common.models import User
from core.database.core import crud

from core.handlers.start import db_user_day_second
from core.keyboards.profile_inline import profile_inline_blocked, profile_inline_active
from core.utils.working_datetime import days_to_seconds, get_left_days_in_seconds
from core.utils.site_api import site_api

db_filter = crud.get_filter_users()
db_time_check = crud.get_time_check()
db_update = crud.update()
update_site = site_api.set_user()

db_user_data = crud.get_data()


async def user_temporary_blocking(callback: CallbackQuery, bot: Bot):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param callback:
    :param bot:
    :return:
    """
    telegram_id = str(callback.from_user.id)
    time_check = db_time_check(User, telegram_id)
    text = (f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {callback.from_user.first_name}!\n\n'
           f'<b>–£ –í–∞—Å –æ—Å—Ç–∞–ª–∞—Å—å {get_left_days_in_seconds(db_user_day_second(User, telegram_id, User.seconds_left))}</b>\n\n'
           f'–ï—Å–ª–∏ –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Ö —Å–∫–∞—á–∞—Ç—å,\n'
           f'–Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É"\n\n'
           f'üë≠ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ +15 –¥–Ω–µ–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞. '
           f'(–ï—Å–ª–∏ –¥—Ä—É–≥ –æ–ø–ª–∞—Ç–∏—Ç –º–µ—Å—è—Ü.)')

    if callback.data == 'button_suspend_use' and not time_check:

        if db_user_data(User, telegram_id, User.access_levels) in [Attribute.private, Attribute.admin]:
            await callback.message.edit_text(text)
            await callback.message.edit_reply_markup(reply_markup=profile_inline_blocked)
            await callback.answer(f'–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ - 24 —á–∞—Å–∞', show_alert=True)
            balances_by_time = db_user_data(User, telegram_id, User.seconds_left) - int(time.time())
            data = {'status': False,
                    'blocking_user': int(time.time()) + days_to_seconds(1), # –£–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω–æ days_to_seconds(1)
                    'stop_days_left': balances_by_time,
                    'seconds_left': 0}

            db_update(User, telegram_id, data)
            uuid = db_user_data(User, telegram_id, User.uuid)
            update_site(telegram_id=telegram_id, uuid=uuid, enable=False)

        else:
            await bot.send_message(int(telegram_id), f'–í <b>–ø—Ä–æ–±–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ</b> –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n'
                                                f'–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—Å—ë –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å')

    elif callback.data == "button_resume_use":

        seconds = db_user_data(User, telegram_id, User.blocking_user)
        summa_seconds = seconds - int(time.time())
        if summa_seconds > 0:
            await callback.answer(f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ –≤—Ä–µ–º—è {get_left_days_in_seconds(seconds)}\n\n"
                                   f"–ü–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –º–æ–∂–Ω–æ '–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ'", show_alert=True)
        else:
            await callback.answer(f'–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n', show_alert=True)
            await callback.message.edit_reply_markup(reply_markup=profile_inline_active)
            seconds_left = int(time.time()) + db_user_data(User, telegram_id, User.stop_days_left)
            uuid = db_user_data(User, telegram_id, User.uuid)

            data = {'status': True,
                    'blocking_user': 0,
                    'seconds_left': seconds_left,
                    'stop_days_left': 0}
            db_update(User, telegram_id, data)
            update_site(telegram_id=telegram_id, uuid=uuid, enable=True, expiryTime=seconds_left*1000)

    await callback.answer()


